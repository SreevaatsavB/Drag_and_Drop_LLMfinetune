{"ast":null,"code":"// import React from \"react\";\n// import { Handle } from \"reactflow\";\n\n// const CustomNode = ({ data }) => {\n//   const handleDropdownChange = (e) => {\n//     data.onDropdownChange(e.target.value);\n//   };\n\n//   const handleNumberChange = (e) => {\n//     if (data.onNumberChange) {\n//       data.onNumberChange(e.target.value, \"temperature\");\n//     }\n//   };\n\n//   const handleStringChange = (e, field) => {\n//     if (data.onStringChange) {\n//       data.onStringChange(e.target.value, field);\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     if (data.onFileChange) {\n//       data.onFileChange(e.target.files[0]);\n//     }\n//   };\n\n//   const renderNodeContent = () => {\n//     switch (data.label.split(\" \")[0]) {\n//       case \"Dataset\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.url}\n//               onChange={(e) => handleStringChange(e, \"url\")}\n//               placeholder=\"Enter URL\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Upload\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </>\n//         );\n//       case \"Preprocess\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.prompt}\n//               onChange={(e) => handleStringChange(e, \"prompt\")}\n//               placeholder=\"Enter Prompt\"\n//             />\n//           </>\n//         );\n//       case \"Train\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"number\"\n//               value={data.temperature}\n//               onChange={handleNumberChange}\n//               placeholder=\"Enter Temperature\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Test\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.input}\n//               onChange={(e) => handleStringChange(e, \"input\")}\n//               placeholder=\"Enter Input\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={data.output}\n//               onChange={(e) => handleStringChange(e, \"output\")}\n//               placeholder=\"Enter Output\"\n//             />\n//           </>\n//         );\n//       case \"Deploy\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <select\n//               value={data.typeValue}\n//               onChange={(e) => handleStringChange(e, \"typeValue\")}\n//             >\n//               <option value=\"\">Select Type...</option>\n//               <option value=\"Batch\">Batch</option>\n//               <option value=\"RTI\">RTI</option>\n//             </select>\n//           </>\n//         );\n//       default:\n//         return <div>{data.label}</div>;\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 10, border: \"1px solid #ddd\", borderRadius: 4 }}>\n//       {renderNodeContent()}\n//       <Handle type=\"source\" position=\"right\" />\n//       <Handle type=\"target\" position=\"left\" />\n//     </div>\n//   );\n// };\n\n// export default CustomNode;","map":{"version":3,"names":[],"sources":["/Users/sreevaatsav/Downloads/UI_green_sync_test2/my-app/src/components/CustomNode.js"],"sourcesContent":["// import React from \"react\";\n// import { Handle } from \"reactflow\";\n\n// const CustomNode = ({ data }) => {\n//   const handleDropdownChange = (e) => {\n//     data.onDropdownChange(e.target.value);\n//   };\n\n//   const handleNumberChange = (e) => {\n//     if (data.onNumberChange) {\n//       data.onNumberChange(e.target.value, \"temperature\");\n//     }\n//   };\n\n//   const handleStringChange = (e, field) => {\n//     if (data.onStringChange) {\n//       data.onStringChange(e.target.value, field);\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     if (data.onFileChange) {\n//       data.onFileChange(e.target.files[0]);\n//     }\n//   };\n\n//   const renderNodeContent = () => {\n//     switch (data.label.split(\" \")[0]) {\n//       case \"Dataset\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.url}\n//               onChange={(e) => handleStringChange(e, \"url\")}\n//               placeholder=\"Enter URL\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Upload\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </>\n//         );\n//       case \"Preprocess\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.prompt}\n//               onChange={(e) => handleStringChange(e, \"prompt\")}\n//               placeholder=\"Enter Prompt\"\n//             />\n//           </>\n//         );\n//       case \"Train\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"number\"\n//               value={data.temperature}\n//               onChange={handleNumberChange}\n//               placeholder=\"Enter Temperature\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Test\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.input}\n//               onChange={(e) => handleStringChange(e, \"input\")}\n//               placeholder=\"Enter Input\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={data.output}\n//               onChange={(e) => handleStringChange(e, \"output\")}\n//               placeholder=\"Enter Output\"\n//             />\n//           </>\n//         );\n//       case \"Deploy\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <select\n//               value={data.typeValue}\n//               onChange={(e) => handleStringChange(e, \"typeValue\")}\n//             >\n//               <option value=\"\">Select Type...</option>\n//               <option value=\"Batch\">Batch</option>\n//               <option value=\"RTI\">RTI</option>\n//             </select>\n//           </>\n//         );\n//       default:\n//         return <div>{data.label}</div>;\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 10, border: \"1px solid #ddd\", borderRadius: 4 }}>\n//       {renderNodeContent()}\n//       <Handle type=\"source\" position=\"right\" />\n//       <Handle type=\"target\" position=\"left\" />\n//     </div>\n//   );\n// };\n\n// export default CustomNode;\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}