{"ast":null,"code":"var _jsxFileName = \"/Users/sreevaatsav/Downloads/UI_green_sync_test2/my-app/src/components/CustomNode.js\";\n// import React from \"react\";\n// import { Handle } from \"reactflow\";\n\n// const CustomNode = ({ data }) => {\n//   const handleDropdownChange = (e) => {\n//     data.onDropdownChange(e.target.value);\n//   };\n\n//   const handleNumberChange = (e) => {\n//     if (data.onNumberChange) {\n//       data.onNumberChange(e.target.value, \"temperature\");\n//     }\n//   };\n\n//   const handleStringChange = (e, field) => {\n//     if (data.onStringChange) {\n//       data.onStringChange(e.target.value, field);\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     if (data.onFileChange) {\n//       data.onFileChange(e.target.files[0]);\n//     }\n//   };\n\n//   const renderNodeContent = () => {\n//     switch (data.label.split(\" \")[0]) {\n//       case \"Dataset\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.url}\n//               onChange={(e) => handleStringChange(e, \"url\")}\n//               placeholder=\"Enter URL\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Upload\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </>\n//         );\n//       case \"Preprocess\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.prompt}\n//               onChange={(e) => handleStringChange(e, \"prompt\")}\n//               placeholder=\"Enter Prompt\"\n//             />\n//           </>\n//         );\n//       case \"Train\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"number\"\n//               value={data.temperature}\n//               onChange={handleNumberChange}\n//               placeholder=\"Enter Temperature\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Test\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.input}\n//               onChange={(e) => handleStringChange(e, \"input\")}\n//               placeholder=\"Enter Input\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={data.output}\n//               onChange={(e) => handleStringChange(e, \"output\")}\n//               placeholder=\"Enter Output\"\n//             />\n//           </>\n//         );\n//       case \"Deploy\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <select\n//               value={data.typeValue}\n//               onChange={(e) => handleStringChange(e, \"typeValue\")}\n//             >\n//               <option value=\"\">Select Type...</option>\n//               <option value=\"Batch\">Batch</option>\n//               <option value=\"RTI\">RTI</option>\n//             </select>\n//           </>\n//         );\n//       default:\n//         return <div>{data.label}</div>;\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 10, border: \"1px solid #ddd\", borderRadius: 4 }}>\n//       {renderNodeContent()}\n//       <Handle type=\"source\" position=\"right\" />\n//       <Handle type=\"target\" position=\"left\" />\n//     </div>\n//   );\n// };\n\n// export default CustomNode;\n\nimport React from \"react\";\nimport { Handle } from \"reactflow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  const handleStringChange = (e, field) => {\n    if (data.onStringChange) {\n      data.onStringChange(e.target.value, field);\n    }\n  };\n  const renderNodeContent = () => {\n    switch (data.label.split(\" \")[0]) {\n      // ... other cases\n      case \"Test\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: data.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: data.onChatOpen,\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      // ... other cases\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      border: \"1px solid #ddd\",\n      borderRadius: 4\n    },\n    children: [renderNodeContent(), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","Handle","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomNode","data","handleStringChange","e","field","onStringChange","target","value","renderNodeContent","label","split","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChatOpen","style","padding","border","borderRadius","type","position","_c","$RefreshReg$"],"sources":["/Users/sreevaatsav/Downloads/UI_green_sync_test2/my-app/src/components/CustomNode.js"],"sourcesContent":["// import React from \"react\";\n// import { Handle } from \"reactflow\";\n\n// const CustomNode = ({ data }) => {\n//   const handleDropdownChange = (e) => {\n//     data.onDropdownChange(e.target.value);\n//   };\n\n//   const handleNumberChange = (e) => {\n//     if (data.onNumberChange) {\n//       data.onNumberChange(e.target.value, \"temperature\");\n//     }\n//   };\n\n//   const handleStringChange = (e, field) => {\n//     if (data.onStringChange) {\n//       data.onStringChange(e.target.value, field);\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     if (data.onFileChange) {\n//       data.onFileChange(e.target.files[0]);\n//     }\n//   };\n\n//   const renderNodeContent = () => {\n//     switch (data.label.split(\" \")[0]) {\n//       case \"Dataset\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.url}\n//               onChange={(e) => handleStringChange(e, \"url\")}\n//               placeholder=\"Enter URL\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Upload\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </>\n//         );\n//       case \"Preprocess\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.prompt}\n//               onChange={(e) => handleStringChange(e, \"prompt\")}\n//               placeholder=\"Enter Prompt\"\n//             />\n//           </>\n//         );\n//       case \"Train\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"number\"\n//               value={data.temperature}\n//               onChange={handleNumberChange}\n//               placeholder=\"Enter Temperature\"\n//             />\n//             <button onClick={data.onCredChange}>Enter Credentials</button>\n//           </>\n//         );\n//       case \"Test\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <input\n//               type=\"text\"\n//               value={data.input}\n//               onChange={(e) => handleStringChange(e, \"input\")}\n//               placeholder=\"Enter Input\"\n//             />\n//             <input\n//               type=\"text\"\n//               value={data.output}\n//               onChange={(e) => handleStringChange(e, \"output\")}\n//               placeholder=\"Enter Output\"\n//             />\n//           </>\n//         );\n//       case \"Deploy\":\n//         return (\n//           <>\n//             <div>{data.label}</div>\n//             <select\n//               value={data.typeValue}\n//               onChange={(e) => handleStringChange(e, \"typeValue\")}\n//             >\n//               <option value=\"\">Select Type...</option>\n//               <option value=\"Batch\">Batch</option>\n//               <option value=\"RTI\">RTI</option>\n//             </select>\n//           </>\n//         );\n//       default:\n//         return <div>{data.label}</div>;\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 10, border: \"1px solid #ddd\", borderRadius: 4 }}>\n//       {renderNodeContent()}\n//       <Handle type=\"source\" position=\"right\" />\n//       <Handle type=\"target\" position=\"left\" />\n//     </div>\n//   );\n// };\n\n// export default CustomNode;\n\n\nimport React from \"react\";\nimport { Handle } from \"reactflow\";\n\nconst CustomNode = ({ data }) => {\n  const handleStringChange = (e, field) => {\n    if (data.onStringChange) {\n      data.onStringChange(e.target.value, field);\n    }\n  };\n\n  const renderNodeContent = () => {\n    switch (data.label.split(\" \")[0]) {\n      // ... other cases\n      case \"Test\":\n        return (\n          <>\n            <div>{data.label}</div>\n            <button onClick={data.onChatOpen}>Test</button>\n          </>\n        );\n      // ... other cases\n      default:\n        return <div>{data.label}</div>;\n    }\n  };\n\n  return (\n    <div style={{ padding: 10, border: \"1px solid #ddd\", borderRadius: 4 }}>\n      {renderNodeContent()}\n      <Handle type=\"source\" position=\"right\" />\n      <Handle type=\"target\" position=\"left\" />\n    </div>\n  );\n};\n\nexport default CustomNode;\n"],"mappingszB,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,MAAMC,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACvC,IAAIH,IAAI,CAACI,cAAc,EAAE;MACvBJ,IAAI,CAACI,cAAc,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,EAAEH,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,QAAQP,IAAI,CAACQ,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9B;MACA,KAAK,MAAM;QACT,oBACEb,OAAA,CAAAE,SAAA;UAAAY,QAAA,gBACEd,OAAA;YAAAc,QAAA,EAAMV,IAAI,CAACQ;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvBlB,OAAA;YAAQmB,OAAO,EAAEf,IAAI,CAACgB,UAAW;YAAAN,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC/C,CAAC;MAEP;MACA;QACE,oBAAOlB,OAAA;UAAAc,QAAA,EAAMV,IAAI,CAACQ;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;IAClC;EACF,CAAC;EAED,oBACElB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAAV,QAAA,GACpEH,iBAAiB,CAAC,CAAC,eACpBX,OAAA,CAACF,MAAM;MAAC2B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzClB,OAAA,CAACF,MAAM;MAAC2B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAM;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACS,EAAA,GA9BIxB,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}